using System.Collections.Generic;
using System.Linq;

namespace RetireRuntimeMiddleware.HttpClients.Models
{
    internal class VulnerabilityReport
    {
        public VulnerabilityReport()
        {
            ChannelReports = new List<ChannelReport>();
        }

        public Release SecurePatch { get; set; }

        public List<ChannelReport> ChannelReports { get; set; }

        public void AddChannelReport(ChannelReport report)
        {
            ChannelReports.Add(report);
        }

        public ChannelReport FindChannel(string runtimeVersion)
        {
            var allVulns = new List<Release>();
            foreach (var report in ChannelReports)
            {
                allVulns.AddRange(report.AllVulnerablesExceptLatestSecurityRelease);
                var containsVulnerableRelease = report.AllVulnerablesExceptLatestSecurityRelease.Any(r => r.Runtime?.Version == runtimeVersion && r.ReleaseVersion == runtimeVersion);
                if (containsVulnerableRelease)
                {
                    report.VulnerableRelease = report.AllVulnerablesExceptLatestSecurityRelease.First(r => r.Runtime?.Version == runtimeVersion && r.ReleaseVersion == runtimeVersion);
                    return report;
                }
            }

            return new ChannelReport
            {

            };
        }
    }
}
